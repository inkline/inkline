import{s as d,c,h as y,x as p}from"./vue.esm-bundler-BXWn_Vmw.js";function l(o){if(o===null||typeof o!="object")return!1;const n=Object.getPrototypeOf(o);return n!==null&&n!==Object.prototype&&Object.getPrototypeOf(n)!==null||Symbol.iterator in o?!1:Symbol.toStringTag in o?Object.prototype.toString.call(o)==="[object Module]":!0}function u(o,n,e=".",i){if(!l(n))return u(o,{},e,i);const t=Object.assign({},n);for(const r in o){if(r==="__proto__"||r==="constructor")continue;const s=o[r];s!=null&&(i&&i(t,r,s,e)||(Array.isArray(s)&&Array.isArray(t[r])?t[r]=[...s,...t[r]]:l(s)&&l(t[r])?t[r]=u(s,t[r],(e?`${e}.`:"")+r.toString(),i):t[r]=s))}return t}function v(o){return(...n)=>n.reduce((e,i)=>u(e,i,"",o),{})}const m=v();var a=Symbol("InklineOptions"),C=Symbol("ButtonGroup"),z=Symbol("Form"),_=Symbol("FormGroup");function f(){const o=d(a);if(!o)throw new Error("Inkline options are not provided");return{options:o}}function g(o,n){const{options:e}=f();return{color:c(()=>{var r,s;const t=p(n);return t?t||"light":(r=e.value.propsByComponentName[o])!=null&&r.color?e.value.propsByComponentName[o].color:e.value.props.color?e.value.props.color:e.value.colorMode.preference==="system"?typeof window<"u"&&((s=window.matchMedia)!=null&&s.call(window,"(prefers-color-scheme: dark)").matches)?"dark":"light":e.value.colorMode.preference})}}function k(o,n){const{options:e}=f();return{size:c(()=>{var r,s;const t=p(n);if(!t){if((r=e.value.propsByComponentName[o])!=null&&r.size)return e.value.propsByComponentName[o].size;if((s=e.value.props)!=null&&s.size)return e.value.props.size}return t||"md"})}}var O={components:{},props:{color:"",size:""},propsByComponentName:{},colorMode:{preference:"system",strategy:"localStorage",renderMode:"client"},routerComponent:"RouterLink",addons:[]};function S(o){return m(o,O)}var h={install:(o,n)=>{const e=y(S(n));o.provide(a,e),e.value.addons.forEach(i=>{i(o,e)})}};const j=(o,n)=>{const e=o.__vccOpts||o;for(const[i,t]of n)e[i]=t;return e};export{C as B,z as F,h as I,j as _,g as a,k as b,_ as c,f as u};
