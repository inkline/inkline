var e=Object.defineProperty,t=Object.prototype.hasOwnProperty,r=Object.getOwnPropertySymbols,a=Object.prototype.propertyIsEnumerable,n=(t,r,a)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[r]=a;import{defineComponent as o,computed as l,onMounted as i,h as s}from"vue";const c=class{static add(e,t){c.icons[e]=t}static addMultiple(e){Object.keys(e).forEach((t=>{c.icons[t]=e[t]}))}};let p=c;p.icons={};const u=e=>e.map((e=>"element"===e.type?s(e.name,e.attributes,u(e.children||[])):e.value));var v=o({name:"IIcon",props:{name:{type:String,default:""},size:{type:String,default:""}},setup(e){const o=l((()=>e.name.replace(/[-_]([a-z0-9])/g,((e,t)=>t.toUpperCase())))),c=l((()=>p.icons[o.value])),v=l((()=>({"inkline-icon":!0,[`-${e.size}`]:Boolean(e.size)})));return i((()=>{if(!p.icons[o.value])throw new Error(`The icon ${o.value} is not registered.`)})),()=>{var e,o;return s("svg",((e,o)=>{for(var l in o||(o={}))t.call(o,l)&&n(e,l,o[l]);if(r)for(var l of r(o))a.call(o,l)&&n(e,l,o[l]);return e})({class:v.value},null==(e=c.value)?void 0:e.attributes),u((null==(o=c.value)?void 0:o.children)||[]))}}});const d={install(e,t={}){e.component(v.name,v),Object.keys(t).forEach((e=>{p.add(e,t[e])}))}};export default d;export{d as InklineIcons};
