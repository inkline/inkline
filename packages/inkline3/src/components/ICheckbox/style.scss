@import '../../css/variables';
@import '../../css/mixins';
@import '../IIcon/css/variables';
@import '../IIcon/css/mixins';
@import 'css/variables';
@import 'css/css';
@import 'css/colors';
@import 'css/sizes';

.checkbox {
    position: relative;
    display: inline-flex;
    align-items: center;
    white-space: nowrap;
    outline: none;
    cursor: pointer;
    margin-right: var(--checkbox-margin-right);

    &:last-child {
        margin-right: 0;
    }

    &.-disabled {
        cursor: default;

        .checkbox-label {
            &::before,
            &::after {
                cursor: default;
            }
        }
    }

    input {
        top: 0;
        left: 0;
        position: absolute;
        z-index: 0; // Put the input behind the label so it doesn't overlay text
        opacity: 0;
        height: 0;
        width: 0;
        outline: 0;

        &:checked ~ .checkbox-label,
        &[type="checkbox"]:indeterminate ~ .checkbox-label {
            &::after {
                content: $icon-check;
                transform: scale(1);
            }
        }

        &:indeterminate ~ .checkbox-label::after {
            content: $icon-minus;
        }

        &:focus,
        &:active {
            outline: none;
        }
    }

    .checkbox-label {
        margin-bottom: 0;
        display: inline-flex;
        align-items: center;
        position: relative;
        transition-property: color;
        transition-duration: var(--transition-duration);
        transition-timing-function: var(--transition-easing);

        &::before,
        &::after {
            display: inline-flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
        }

        &::before {
            content: "";
            user-select: none;
            border-width: var(--checkbox-indicator-border-width);
            border-style: solid;
            margin-right: var(--checkbox-indicator-margin-right);
            transition-property: background-color, border-color;
            transition-duration: var(--transition-duration);
            transition-timing-function: var(--transition-easing);
        }

        &::after {
            @extend %icon;
            position: absolute;
            top: 50%;
            left: 0;
            z-index: 1;
            text-align: center;
            transition-property: transform;
            transition-duration: var(--transition-duration);
            transition-timing-function: var(--transition-easing);
            transform: scale(0);
        }
    }

    &.-native {
        input {
            top: auto;
            left: auto;
            position: relative;
            opacity: 1;
            height: auto;
            width: auto;
            margin-right: var(--checkbox-indicator-margin-right);
        }

        .checkbox-label {
            &::after,
            &::before {
                display: none;
            }
        }
    }

    @include checkbox-size-variant('md');
    @each $size-variant-key, $checkbox-size-variant-value in $checkbox-size-variants {
        .form.-#{$size-variant-key} &,
        .form-group.-#{$size-variant-key} &,
        &.-#{$size-variant-key} {
            @include checkbox-size-variant($size-variant-key);
        }
    }

    @include checkbox-color-variant('light');
    @each $color-variant-key, $color-variant-value in $checkbox-color-variants {
        .form.-#{$color-variant-key} &,
        .form-group.-#{$color-variant-key} &,
        &.-#{$color-variant-key} {
            @include checkbox-color-variant($color-variant-key);
        }
    }
}
