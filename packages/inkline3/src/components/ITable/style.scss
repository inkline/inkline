/**
 * Tables
 */
@import '../../css/variables';
@import '../../css/mixins';
@import 'css/_variables';
@import 'css/_variants';

.table {
    width: 100%;
    max-width: 100%;
    margin-bottom: var(--table-margin-bottom);

    th,
    td {
        padding: var(--table-cell-padding);
        vertical-align: top;
        border-top: var(--table-border-width) solid transparent;
        transition-duration: var(--transition-duration);
        transition-timing-function: var(--transition-easing);
        transition-property: color, background-color, border;
    }

    thead th {
        vertical-align: bottom;
        border-bottom-width: calc(2 * var(--table-border-width));
        border-bottom-color: var(--table-border-color);
    }

    tbody + tbody {
        border-top: calc(2 * var(--table-border-width)) solid transparent;
    }

    // Condensed table w/ half padding
    //
    &.-condensed {
        th,
        td {
            padding: var(--table-cell-padding-sm);
        }
    }

    // Bordered version
    //
    // Add borders all around the table and between all the columns.
    //
    &.-bordered {
        border: var(--table-border-width) solid transparent;

        th,
        td {
            border: var(--table-border-width) solid var(--table-border-color);
        }
    }

    // No wrap
    //
    // Set table cell white-space to nowrap
    //
    &.-nowrap {
        th,
        td {
            white-space: nowrap;
        }
    }

    // Hover table
    //
    // Placed here since it has to come after the potential zebra striping
    //
    &.-hover {
        tbody tr {
            th,
            td {
                transition: background-color var(--transition-duration) ease;
            }
        }
    }

    th,
    td,
    tbody + tbody {
        border-top-color: var(--table-border-color);
    }

    @include table-color-variant('light');
    @each $color-variant-key, $color-variant-value in $table-color-variants {
        &.-#{$color-variant-key} {
            @include table-color-variant($color-variant-key);
        }
    }
}

// Responsive tables
//
// Generate series of `.table-responsive-*` classes for configuring the screen
// size of where your table will overflow.
//
.table-wrapper {
    display: block;
    position: relative;

    &.-responsive {
        @each $breakpoint-key, $breakpoint-value in $breakpoints {
            $infix: breakpoint-infix($breakpoint-key);

            &#{$infix} {
                @include breakpoint-down($breakpoint-key) {
                    display: block;
                    width: 100%;
                    overflow-x: auto;
                    -webkit-overflow-scrolling: touch;
                    -ms-overflow-style: -ms-autohiding-scrollbar;

                    // Prevent double border on horizontal scroll due to use of `display: block`
                    .table {
                        &.-bordered {
                            border: none;
                        }
                    }
                }
            }
        }
    }
}
