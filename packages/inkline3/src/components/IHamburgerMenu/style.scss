/**
 * Nav
 */
@import '../../css/variables';
@import '../../css/mixins';
@import 'css/variables';
@import 'css/css';
@import 'css/colors';

.hamburger {
    opacity: var(--hamburger-menu-opacity);
    padding: var(--hamburger-menu-padding);
    width: var(--hamburger-menu-bar-width);
    height: calc(var(--hamburger-menu-bar-height) * 3 + var(--hamburger-menu-bar-spacing) * 2);
    display: inline-block;
    position: relative;
    box-sizing: content-box;
    cursor: pointer;
    transition: opacity 0.3s ease;

    &:hover {
        opacity: var(--hamburger-menu-hover-opacity);
    }

    > .bars {
        display: block;
        top: 50%;
        margin-top: calc(var(--hamburger-menu-bar-height) / -2);

        &,
        &::before,
        &::after {
            width: var(--hamburger-menu-bar-width);
            height: var(--hamburger-menu-bar-height);
            border-radius: var(--hamburger-menu-bar-border-radius);
            position: absolute;
            transition-property: transform;
            transition-duration: 0.15s;
            transition-timing-function: ease;
        }

        &::before,
        &::after {
            content: "";
            display: block;
        }

        &::before {
            top: calc(var(--hamburger-menu-bar-spacing) * -1 + var(--hamburger-menu-bar-height) * -1);
        }

        &::after {
            bottom: calc(var(--hamburger-menu-bar-spacing) * -1 + var(--hamburger-menu-bar-height) * -1);
        }
    }

    &.-close {
        > .bars {
            transition-duration: 0.22s;
            transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);

            &::before {
                transition: top 0.1s 0.25s ease-in, opacity 0.1s ease-in;
            }

            &::after {
                transition: bottom 0.1s 0.25s ease-in, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
            }
        }

        &.-active {
            > .bars {
                transform: rotate(225deg);
                transition-delay: 0.12s;
                transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);

                &::before {
                    top: 0;
                    opacity: 0;
                    transition: top 0.1s ease-out, opacity 0.1s 0.12s ease-out;
                }

                &::after {
                    bottom: 0;
                    transform: rotate(-90deg);
                    transition: bottom 0.1s ease-out, transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
                }
            }
        }
    }

    &.-arrow-left.-active > .bars {
        &::before {
            transform: translate3d(calc(var(--hamburger-menu-bar-width) * -0.2), 0, 0) rotate(-45deg) scale(0.7, 1);
        }

        &::after {
            transform: translate3d(calc(var(--hamburger-menu-bar-width) * -0.2), 0, 0) rotate(45deg) scale(0.7, 1);
        }
    }

    &.-arrow-right.-active > .bars {
        &::before {
            transform: translate3d(calc(var(--hamburger-menu-bar-width) * 0.2), 0, 0) rotate(45deg) scale(0.7, 1);
        }

        &::after {
            transform: translate3d(calc(var(--hamburger-menu-bar-width) * 0.2), 0, 0) rotate(-45deg) scale(0.7, 1);
        }
    }

    &.-arrow-up.-active > .bars {
        transform: rotate(-90deg);

        &::before {
            transform: translate3d(calc(var(--hamburger-menu-bar-width) * 0.2), 0, 0) rotate(45deg) scale(0.7, 1);
        }

        &::after {
            transform: translate3d(calc(var(--hamburger-menu-bar-width) * 0.2), 0, 0) rotate(-45deg) scale(0.7, 1);
        }
    }

    &.-arrow-down.-active > .bars {
        transform: rotate(90deg);

        &::before {
            transform: translate3d(calc(var(--hamburger-menu-bar-width) * 0.2), 0, 0) rotate(45deg) scale(0.7, 1);
        }

        &::after {
            transform: translate3d(calc(var(--hamburger-menu-bar-width) * 0.2), 0, 0) rotate(-45deg) scale(0.7, 1);
        }
    }

    &.-minus.-active > .bars {
        &::before {
            transform: translate3d(0, calc(var(--hamburger-menu-bar-spacing) + var(--hamburger-menu-bar-height)), 0);
        }

        &::after {
            transform: translate3d(0, calc(var(--hamburger-menu-bar-spacing) * -1 + var(--hamburger-menu-bar-height) * -1), 0);
        }
    }

    &.-plus.-active > .bars {
        &::before {
            transform: translate3d(0, calc(var(--hamburger-menu-bar-spacing) + var(--hamburger-menu-bar-height)), 0);
        }

        &::after {
            transform: translate3d(0, calc(var(--hamburger-menu-bar-spacing) * -1 + var(--hamburger-menu-bar-height) * -1), 0) rotate(90deg);
        }
    }

    @include hamburger-menu-color-variant('light');
    @each $color-variant-key, $color-variant-value in $hamburger-menu-color-variants {
        &.-#{$color-variant-key} {
            @include hamburger-menu-color-variant($color-variant-key);
        }
    }
}
