@import '../../css/variables';
@import '../../css/mixins';
@import '../IIcon/css/variables';
@import '../IIcon/css/mixins';
@import 'css/variables';
@import 'css/css';
@import 'css/sizes';
@import 'css/colors';

.input-wrapper {
    display: block;
    vertical-align: middle;
    position: relative;

    > .input-prepend,
    > .input-append {
        display: flex;
        flex-flow: row nowrap;
        align-items: stretch;
        padding: 0;
        line-height: var(--input-line-height);
        transition-property: background-color;
        transition-duration: var(--transition-duration);
        transition-timing-function: var(--transition-easing);

        > * {
            flex: auto 1 0;
            align-self: center;
            border-radius: 0;
        }
    }

    .input {
        position: relative;
        display: flex;
        flex: 1 0 auto;
        align-items: center;
        flex-direction: row;
        background-clip: padding-box;
        border-width: var(--input-border-width);
        border-style: solid;
        box-shadow: var(--input-box-shadow);
        transition-property: background-color, color, border-color, box-shadow;
        transition-duration: var(--transition-duration);
        transition-timing-function: var(--transition-easing);

        // Customize the `:focus` state to imitate native WebKit styles.
        &:focus-within {
            outline: 0;
            box-shadow: var(--input-box-shadow);
        }

        > input,
        > select,
        > textarea {
            position: relative;
            flex: 1 0 auto;
            width: 1%;
            background: transparent;
            border: 0;
            padding: 0;
            margin: 0;
            outline: 0;
            line-height: var(--input-line-height);

            // Remove style for the caret on `<select>`s in IE10+.
            &::-ms-expand {
                background-color: transparent;
                border: 0;
            }

            // Placeholder
            // Override Firefox's unusual default opacity see https://github.com/twbs/bootstrap/pull/11526.
            &::placeholder {
                opacity: 1;
            }

            // Disabled and read-only inputs
            //
            // HTML5 says that controls under a fieldset > legend:first-child won't be
            // disabled if the fieldset is disabled. Due to implementation difficulty, we
            // don't honor that edge case we style them as disabled anyway.
            &:disabled,
            &[readonly] {
                opacity: 1; // iOS fix for unreadable disabled content
                cursor: default;
            }

            /**
             * Select
             */
            &[readonly]:focus {
                outline: 0;
            }
        }

        .input-prefix,
        .input-suffix {
            display: inline-flex;
            align-items: center;
            z-index: 1;
            font-style: normal;
            transition-property: border-color;
            transition-duration: var(--transition-duration);
            transition-timing-function: var(--transition-easing);

            > button {
                background: transparent;
                border: 0;
                color: inherit;
            }
        }

        .input-prefix {
            padding-right: spacer();
            border-right-width: var(--input-prefix-border-width);
            border-right-style: solid;
        }

        .input-suffix {
            padding-left: spacer();
            border-left-width: var(--input-prefix-border-width);
            border-left-style: solid;
        }

        .input-clear {
            transition-property: background-color;
            transition-duration: var(--transition-duration);
            transition-timing-function: var(--transition-easing);
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            width: var(--input-icon-circle-size);
            height: var(--input-icon-circle-size);
            border-radius: 100%;

            &::before {
                @extend %icon;

                font-size: 8px;
                content: $icon-times;
            }
        }
    }

    @include input-size-variant('md');
    @each $size-variant-key, $input-size-variant-value in $input-size-variants {
        .form.-#{$size-variant-key} &,
        .form-group.-#{$size-variant-key} &,
        &.-#{$size-variant-key} {
            @include input-size-variant($size-variant-key);
        }
    }

    @include input-color-variant('light');
    @each $color-variant-key, $color-variant-value in $input-color-variants {
        .form.-#{$color-variant-key} &,
        .form-group.-#{$color-variant-key} &,
        &.-#{$color-variant-key} {
            @include input-color-variant($color-variant-key);
        }
    }

    &.-prepended,
    &.-appended {
        display: flex;
        flex-wrap: nowrap;

        > .input {
            flex-shrink: 1;
        }
    }

    &.-prepended {
        > .input {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
    }

    &.-appended {
        > .input {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
    }

    &.-error {
        .input {
            border-color: color('danger');
        }
    }
}

