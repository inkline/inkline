@import '../../css/config';
@import '../../css/mixins';

// Prevent columns from becoming too narrow when at smaller grid tiers by
// always setting `width: 100%`. This works because we use `flex` values
// later on to override this initial width.
//
-column-full-width()
    flex-grow: 0
    flex-basis: 100%
    width: 100%


// Create a flexible column that takes up the space it can
//
-column-flexible()
    flex-grow: 1
    flex-basis: 0
    max-width: 100%


// Add a `max-width` to ensure content within each column does not blow out
// the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
// do not appear to require this.
//
-column-fixed-width(--columns, --columns-count)
    flex-grow: 1
    flex-basis: percentage(--columns-count / --columns)
    max-width: percentage(--columns-count / --columns)

/**
 * Column
 */
.col, .column
    -column-flexible()

    box-sizing: border-box
    min-height: 1px
    position: relative

    for --breakpoint-name, --gutter-width in --gutter
        +-breakpoint-up(--breakpoint-name)
            padding-left: (--gutter-width / 2)
            padding-right: (--gutter-width / 2)

    // Column Responsive Sizes
    //
    for --breakpoint-name, --breakpoint-value in --breakpoints
        --breakpoint = -breakpoint-infix(--breakpoint-name)

        &.{--breakpoint},
        &.{--breakpoint}-auto
            -column-full-width()

        +-breakpoint-up(--breakpoint-name)
            &.{--breakpoint}
                -column-flexible()

            &.{--breakpoint}-auto
                flex: 1 0 auto
                max-width: auto

            &.-first{--breakpoint}
                order: -1

            &.-last{--breakpoint}
                order: 1

        for --column-count in 1..--columns
            &.{--breakpoint}-{--column-count}
                -column-full-width()

            +-breakpoint-up(--breakpoint-name)
                // Column width
                //
                &.{--breakpoint}-{--column-count}
                    -column-fixed-width(--columns, --column-count)

                // Column offset
                //
                &.-offset{--breakpoint}-{--column-count}
                    margin-left: percentage(--column-count / --columns)

                // Column push
                //
                &.-push{--breakpoint}-{--column-count}
                    left: percentage(--column-count / --columns)

                // Column pull
                //
                &.-pull{--breakpoint}-{--column-count}
                    right: percentage(--column-count / --columns)
