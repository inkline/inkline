/**
 * Image
 */

%image-responsive {
    max-width: 100%;

    // Override the height to auto, otherwise images will be stretched
    // when setting a width and height attribute on the img element.
    height: auto;
}

%image-thumbnail {
    padding: var(--thumbnail--padding);
    background-color: var(--thumbnail--background);
    border-width: var(--thumbnail--border-width);
    border-style: var(--border-style);
    border-color: var(--thumbnail--border-color);
    border-radius: var(--thumbnail--border-radius);
    transition: var(--thumbnail--transition);
    box-shadow: var(--thumbnail--box-shadow);

    @extend %image-responsive;
}

.img,
.image {

    // Responsive images
    //
    // Ensure images don't scale beyond their parents. This is purposefully opt-in
    // via an explicit class rather than being the default for all `<img>` because
    // it can break third-party widgets (including Google Maps) which weren't
    // expecting the images within themselves to be involuntarily resized.
    //
    &.-responsive {
        @extend %image-responsive;
    }

    &.-fluid {

        // Set the width to always be container width
        width: 100%;

        // Override the height to auto, otherwise images will be stretched
        // when setting a width and height attribute on the img element.
        height: auto;
    }

    // In Internet Explorer 10, SVG images with .-responsive are
    // disproportionately sized. This fix improperly sizes other image formats,
    // so Inkline will only apply it to svg extensions
    &[src$=".svg"] {
        width: 100% \9;
    }

    // Image thumbnails
    //
    &.-thumbnail {
        @extend %image-thumbnail;
    }

    // Image Polaroid
    //
    &.-polaroid {
        padding-bottom: var(--polaroid--padding);

        @extend %image-thumbnail;
    }
}
